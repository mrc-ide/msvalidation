suppressPackageStartupMessages(library(ggplot2))
suppressPackageStartupMessages(library(cowplot))
library(ICDMM)
ms_runs <- readRDS("./inst/ms_runs.rds")
get_wd()
getwd()
getwd()
suppressPackageStartupMessages(library(ggplot2))
suppressPackageStartupMessages(library(cowplot))
library(ICDMM)
ms_runs <- readRDS("./inst/ms_runs.rds")
suppressPackageStartupMessages(library(ggplot2))
suppressPackageStartupMessages(library(cowplot))
library(ICDMM)
old_model_runs <- readRDS(
system.file('extdata', 'eir_prev_inc_old_model.RDS', package='msvalidation')
)
old_model_runs$model <- 'legacy'
eir <- old_model_runs$eir
year <- 365
warm_up <- 5 * year
period <- 5
population <- 1e5
eta <- 0.0001163315
fillna <- function(x, value) {
x[is.na(x)] <- value
x
}
# get_ms_runs <- function(eir) {
#   params <- malariasimulation::get_parameters(list(
#     human_population = population,
#     clinical_incidence_rendering_min_ages = 0,
#     clinical_incidence_rendering_max_ages = 5 * year,
#     individual_mosquitoes = FALSE,
#     n_heterogeneity_groups = 5,
#     average_age = 1 / eta
#   ))
#   params <- malariasimulation::set_equilibrium(params, eir)
#   malariasimulation::run_simulation(warm_up + period * year, params)
# }
#
# get_ms_values <- function(run) {
#   output <- tail(run, period * year)
#   c(
#     total_m = mean(output$total_M) / population,
#     clinical_incidence = mean(fillna(output$clin_inc_0_36500, 0)) * year,
#     clinical_incidence_0_5 = mean(fillna(output$clin_inc_0_1825, 0)) * year,
#     prevalence_2_10 = mean(output$pv_730_3650),
#     eir = mean(output$EIR) * year
#   )
# }
#
# ms_runs <- lapply(eir, get_ms_runs)
# ms_values <- data.frame(
#   t(
#     vapply(
#       ms_runs,
#       get_ms_values,
#       numeric(5)
#     )
#   )
# )
# ms_values$model <- 'malariasimulation'
# saving malariasimulation runs for future ref
#saveRDS(ms_runs,"./inst/ms_runs.rds")
#saveRDS(ms_values, "./inst/ms_values.rds")
eq_params <- malariaEquilibrium::load_parameter_set()
eq_params$eta <- eta
eq_ages <- 0:999 / 10
get_eq <- function(eir) {
malariaEquilibrium::human_equilibrium(
EIR = eir,
ft = 0,
p = eq_params,
age = eq_ages
)
}
get_equilibrium_values <- function(eq, eir) {
u5 <- eq_ages < 5 # equilibrium model output gives a matrix of values for each age
g2l10 <- (eq_ages > 2) & (eq_ages < 10)
c(
total_m = NA,
clinical_incidence = sum(eq$states[, 'inc']) * year,
clinical_incidence_0_5 = sum(eq$states[u5, 'inc']) / sum(eq$states[u5, 'prop']) * year,
prevalence_2_10 = sum(eq$states[g2l10, 'pos_M']) / sum(eq$states[g2l10, 'prop']),
eir = eir
)
}
eq_data <- data.frame(
t(
vapply(
old_model_runs$eir,
function(e) get_equilibrium_values(get_eq(e), e),
numeric(5)
)
)
)
eq_data$model <- 'equilibrium'
ms_runs <- readRDS("../inst/ms_runs.rds")
ms_values <- readRDS("../inst/ms_values.rds")
# creating a function for running the odin model given an assigned EIR value
get_dmm <- function(eir) {
run_model(model = 'odin_model_ageprev',
time = period*year,
age = c(0, 0.25, 0.5, 0.75, 1, 1.25, 1.5, 1.75, 2, 2.25, 2.5, 2.75, 3, 3.25, 3.5, 3.75, 4, 4.25, 4.5, 4.75, 5, 7.5, 10, 15, 20, 30, 40, 50, 60, 70, 80),
het_brackets = 5,
init_EIR = eir,
init_ft = 0,
eta = eta,
agestart = 9, #2
ageend = 22) #7.5
}
# creating a function to output CI and Prev values for a given EIR value
get_dmm_values <- function(eq,eir) {
c(
total_m = NA,
clinical_incidence = mean(eq$inc) * year, # DMM outputs daily CI
clinical_incidence_0_5 = mean(eq$inc05) * year,
prevalence_2_10 = mean(eq$prev_agegroup), # prev output is for ages
eir = eir
)
}
# loop through functions, output a data frame with CI and Prev values for each EIR value
dmm_data <- data.frame(
t(
vapply(
old_model_runs$eir,
function(e) get_dmm_values(get_dmm(e), e),
numeric(5)
)
)
)
# labeling model outputs
dmm_data$model <- 'deterministic'
ms_runs[[5]]
View(ms_runs)
View(dmm_data)
eir[[5]]
ms_runs[[5]]
library(ICDMM)
out <- run_model_m_immunity()
