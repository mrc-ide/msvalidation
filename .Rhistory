suppressPackageStartupMessages(library(tidyverse))
suppressPackageStartupMessages(library(cowplot))
library(mlgts)
library(malariasimulation)
# if mlgts has not been previously installed, see the directions in the DIDE drive: /malaria_model_compare/comparisons_getting_started.R
knitr::opts_knit$set(root.dir="I:/malaria_model_compare")
setwd("I:/malaria_model_compare")
source("./R/run_site.R")
# Load all site file data (do not share)
all_sites <- readRDS("./data/GTS2020_sites_fitted.RDS")
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
setwd("I:/malaria_model_compare")
# get exponential demography
generic_demog <- read.table("data/exp_demog.txt")
colnames(generic_demog) <- colnames(all_sites$demog[[1]])
replace_demog <- function(x){
generic_demog
}
# no population growth
standard_pop <- function(x){
x$p = 1
return(x)
}
# no resistance
standard_resistance <- function(x){
x$resistance = 0
return(x[1:18,])
}
# no seasonality
null_seasonality <- function(x){
x[,1] = 1
x[,2:7] = 0
return(x)
}
# no interventions
null_interventions <- function(x){
x[,c(2:4,6,8:14)] = 0
return(x)
}
# standard vectors
standard_vectors <- function(x){
x[,1] = 1
x[,2:3] = 0
return(x)
}
# choose a single site and modify parameters to = null values
test_site <- all_sites[1, ] %>%
# alter the population, demography, resistance, etc.
mutate(pop = purrr::map(pop, standard_pop),
demog = purrr::map(demog, replace_demog),
resistance = purrr::map(resistance, standard_resistance),
vectors = purrr::map(vectors, standard_vectors),
seasonality = purrr::map(seasonality, null_seasonality),
interventions = purrr::map(interventions, null_interventions),
total_M = 10,
num_runs = 1)
# run
output1 <- purrr::pmap(test_site, run_site) %>% bind_rows()
# plot
inc_plots <- ggplot(output1) +
geom_line(aes(x = t, y = clin_inc_0_5)) +
geom_line(aes(x = t, y = clin_inc_0_5_smooth), lty = 2) +
labs(x="Time",y="Clinical incidence 0-5") +
theme_bw()
prev_plots <- ggplot(output1) +
geom_line(aes(x = t, y = prev_2_10)) +
geom_line(aes(x = t, y = prev_2_10_smooth), lty = 2) +
labs(x="Time",y="Prevalence 2-10") +
theme_bw()
plot_grid(inc_plots,prev_plots)
year <- 365
warmup <- 10 * year
sim_length <- 19 * year
population <- 1000
params <- malariasimulation::get_parameters(
list(
human_population = population,
individual_mosquitoes = FALSE,
n_heterogeneity_groups = 5,
model_seasonality = F,
total_M = 10 * population
)
)
output2 <- malariasimulation::run_simulation(warmup + sim_length, params) %>%
dplyr::filter(timestep>=warmup) %>%
mutate(t=timestep/365+1990,
prev_2_10=pv_730_3650)
output2 <- output2 %>% mutate(clin_inc_0_5=clin_inc_0_1825)
View(output2)
sim_length <- 19 * year
population <- 100
params <- malariasimulation::get_parameters(
list(
human_population = population,
individual_mosquitoes = FALSE,
n_heterogeneity_groups = 5,
model_seasonality = F,
total_M = 100 * population
)
)
output2 <- malariasimulation::run_simulation(warmup + sim_length, params) %>%
dplyr::filter(timestep>=warmup) %>%
mutate(t=timestep/365+1990,
prev_2_10=pv_730_3650)
params <- malariasimulation::get_parameters(
list(
human_population = population,
individual_mosquitoes = TRUE,
n_heterogeneity_groups = 5,
model_seasonality = F,
total_M = 100 * population
)
)
output2 <- malariasimulation::run_simulation(warmup + sim_length, params) %>%
dplyr::filter(timestep>=warmup) %>%
mutate(t=timestep/365+1990,
prev_2_10=pv_730_3650)
beepr::beep(1)
test <- run_simulation(100)
View(test)
10 * population
19 * year
params <- malariasimulation::get_parameters(
list(
human_population = population,
individual_mosquitoes = TRUE,
n_heterogeneity_groups = 5,
model_seasonality = F,
total_M = 10 * population
)
)
output2 <- malariasimulation::run_simulation(warmup + sim_length, params)
library('remotes')
install_github('mrc-ide/malariasimulation')
detach("package:malariasimulation", unload = TRUE)
install_github('mrc-ide/malariasimulation')
library('remotes')
install_github('mrc-ide/malariasimulation')
beepr::beep(1)
beepr::beep(1)
getwd()
set_wd("I:/malaria_model_compare")
# if mlgts has not been previously installed, see the directions in the DIDE drive:
# /malaria_model_compare/comparisons_getting_started.R
# here, I: = DIDE shared drive
knitr::opts_knit$set(root.dir="I:/malaria_model_compare")
set_wd("I:/malaria_model_compare")
setwd("I:/malaria_model_compare")
suppressPackageStartupMessages(library(tidyverse))
suppressPackageStartupMessages(library(cowplot))
library(mlgts)
library(malariasimulation)
# if mlgts has not been previously installed, see the directions in the DIDE drive:
# /malaria_model_compare/comparisons_getting_started.R
# here, I: = DIDE shared drive
knitr::opts_knit$set(root.dir="I:/malaria_model_compare")
setwd("I:/malaria_model_compare")
source("./R/run_site.R")
# load all site file data (do not share)
all_sites <- readRDS("./data/GTS2020_sites_fitted.RDS")
# get demography
generic_demog <- read.table("./data/flat_demog.txt")
colnames(generic_demog) <- colnames(all_sites$demog[[1]])
replace_demog <- function(x){
generic_demog
}
# no population growth
standard_pop <- function(x){
x$p = 1
return(x)
}
# no resistance
standard_resistance <- function(x){
x$resistance = 0
return(x[1:18,])
}
# no seasonality
null_seasonality <- function(x){
x[,1] = 1
x[,2:7] = 0
return(x)
}
# no interventions
null_interventions <- function(x){
x[,c(2:4,6,8:14)] = 0
return(x)
}
# standard vectors
standard_vectors <- function(x){
x[,1] = 1
x[,2:3] = 0
return(x)
}
# choose a single site and modify parameters to equal null values
test_site <- all_sites[1, ] %>%
# alter the population, demography, resistance, etc.
mutate(pop = purrr::map(pop, standard_pop),
demog = purrr::map(demog, replace_demog),
resistance = purrr::map(resistance, standard_resistance),
vectors = purrr::map(vectors, standard_vectors),
seasonality = purrr::map(seasonality, null_seasonality),
interventions = purrr::map(interventions, null_interventions),
total_M = 10,
num_runs = 1)
# run
output1 <- purrr::pmap(test_site, run_site) %>% bind_rows()
# plot
inc_plots <- ggplot(output1) +
geom_line(aes(x = t, y = clin_inc_0_5)) +
geom_line(aes(x = t, y = clin_inc_0_5_smooth), lty = 2) +
labs(x="Time",y="Clinical incidence 0-5") +
theme_bw()
prev_plots <- ggplot(output1) +
geom_line(aes(x = t, y = prev_2_10)) +
geom_line(aes(x = t, y = prev_2_10_smooth), lty = 2) +
labs(x="Time",y="Prevalence 2-10") +
theme_bw()
plot_grid(inc_plots,prev_plots)
year <- 365
warmup <- 10 * year # not used for now
sim_length <- 19 * year
population <- 100 # 10000 to match run_site() documentation
# setting paramaters for individual mosquitoes
params_ON <- malariasimulation::get_parameters(
list(
human_population = population,
individual_mosquitoes = TRUE,
mosquito_limit = 150000,
model_seasonality = F,
total_M = 10 * population,
clinical_incidence_rendering_min_ages = 0,
clinical_incidence_rendering_max_ages = 5 * year
)
)
# setting parameters for no individual mosquitoes
params_OFF <- malariasimulation::get_parameters(
list(
human_population = population,
individual_mosquitoes = FALSE,
mosquito_limit = 150000,
model_seasonality = F,
total_M = 10 * population,
clinical_incidence_rendering_min_ages = 0,
clinical_incidence_rendering_max_ages = 5 * year
)
)
run_nmodel <- function(setparams){
run_simulation(sim_length, setparams) %>%
mutate(t=timestep/365+2000, # assigning year
# filling in NAs with 0
clin_inc_0_1825=case_when(!is.na(clin_inc_0_1825)~clin_inc_0_1825,
is.na(clin_inc_0_1825)~0)) %>%
group_by(grp=rep(row_number(), length.out=n(), each=30)) %>% # summarize by month
summarize(t=mean(t),
prev_2_10=mean(pv_730_3650,na.rm=T),
clin_inc_0_5=mean(clin_inc_0_1825,na.rm=T)*year)
}
output2 <- run_nmodel(params_ON)
output3 <- run_nmodel(params_OFF)
# plot
inc_plots <- ggplot(output2) +
geom_line(aes(x = t, y = clin_inc_0_5)) +
geom_line(data=output3,aes(x = t, y = clin_inc_0_5),lty=2) +
labs(x="Time",y="Clinical incidence 0-5") +
theme_bw()
prev_plots <- ggplot(output2) +
geom_line(aes(x = t, y = prev_2_10)) +
geom_line(data=output3,aes(x = t, y = prev_2_10),lty=2) +
labs(x="Time",y="Prevalence 2-10") +
theme_bw()
plot_grid(inc_plots,prev_plots)
# old
output1 <- output1 %>% mutate(model="mlgts")
# new
output2 <- output2 %>%
mutate(model="malariasimulation-ON")
output3 <- output3 %>%
mutate(model="malariasimulation-OFF")
# join old and new model results into a single data set
output_orig <- full_join(output1,full_join(output2,output3)) %>%
dplyr::select(t, prev_2_10, clin_inc_0_5, model)
# plot
inc_plots <- ggplot(output_orig) +
geom_line(aes(x=t, y=clin_inc_0_5, color=model)) +
labs(x="Time",y="Clinical incidence 0-5") +
theme_bw()
prev_plots <- ggplot(output_orig) +
geom_line(aes(x=t, y=prev_2_10, color=model)) +
labs(x="Time",y="Prevalence 2-10") +
theme_bw()
plot_grid(inc_plots,prev_plots)
year <- 365
warmup <- 10 * year # not used for now
sim_length <- 19 * year
population <- 1000 # 10000 to match run_site() documentation
# setting paramaters for individual mosquitoes
params_ON <- malariasimulation::get_parameters(
list(
human_population = population,
individual_mosquitoes = TRUE,
mosquito_limit = 150000,
model_seasonality = F,
total_M = 10 * population,
clinical_incidence_rendering_min_ages = 0,
clinical_incidence_rendering_max_ages = 5 * year
)
)
# setting parameters for no individual mosquitoes
params_OFF <- malariasimulation::get_parameters(
list(
human_population = population,
individual_mosquitoes = FALSE,
mosquito_limit = 150000,
model_seasonality = F,
total_M = 10 * population,
clinical_incidence_rendering_min_ages = 0,
clinical_incidence_rendering_max_ages = 5 * year
)
)
run_nmodel <- function(setparams){
run_simulation(sim_length, setparams) %>%
mutate(t=timestep/365+2000, # assigning year
# filling in NAs with 0
clin_inc_0_1825=case_when(!is.na(clin_inc_0_1825)~clin_inc_0_1825,
is.na(clin_inc_0_1825)~0)) %>%
group_by(grp=rep(row_number(), length.out=n(), each=30)) %>% # summarize by month
summarize(t=mean(t),
prev_2_10=mean(pv_730_3650,na.rm=T),
clin_inc_0_5=mean(clin_inc_0_1825,na.rm=T)*year)
}
output2 <- run_nmodel(params_ON)
View(generic_demog)
output3 <- run_nmodel(params_OFF)
# plot
inc_plots <- ggplot(output2) +
geom_line(aes(x = t, y = clin_inc_0_5)) +
geom_line(data=output3,aes(x = t, y = clin_inc_0_5),lty=2) +
labs(x="Time",y="Clinical incidence 0-5") +
theme_bw()
prev_plots <- ggplot(output2) +
geom_line(aes(x = t, y = prev_2_10)) +
geom_line(data=output3,aes(x = t, y = prev_2_10),lty=2) +
labs(x="Time",y="Prevalence 2-10") +
theme_bw()
plot_grid(inc_plots,prev_plots)
library('remotes')
install_github('mrc-ide/malariasimulation')
